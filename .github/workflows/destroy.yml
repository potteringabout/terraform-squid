name: "Destroy"
on:
  workflow_call:
    inputs:
      ENVIRONMENT_NAME:
        description: "Environment Name"
        required: true
        type: string
      ROLE_DURATION_SECONDS:
        description: "Role duration"
        required: false
        type: number
      ROLE_SESSION_NAME:
        description: "Role session name"
        required: false
        type: string
        default: ghauto

  workflow_dispatch:
    #checkov:skip=CKV_GHA_7:Deliberately added input parameters for specfic deployments
    inputs:
      ENVIRONMENT_NAME:
        description: "Environment where terraform workflows will be deployed to"
        required: true
        type: string
      ROLE_DURATION_SECONDS:
        description: "Role duration"
        required: false
        type: number
        default: 3600
      ROLE_SESSION_NAME:
        description: "Role session name"
        required: false
        type: string
        default: ghmanual

permissions:
  id-token: write
  contents: read
jobs:

  apply:
    name: "destroy-${{ inputs.ENVIRONMENT_NAME }}"
    environment: ${{ inputs.ENVIRONMENT_NAME }}
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Get TF variables from GH environment
      - name: Get TF vars
        uses: ./.github/actions/get-vars
        with:
          CONFIG: ${{ vars.CONFIG }}

      - name: Apply to ${{ inputs.ENVIRONMENT_NAME }}
        uses: ./.github/actions/destroy
        with:
          ENVIRONMENT_NAME: ${{ inputs.ENVIRONMENT_NAME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          ROLE_DURATION_SECONDS: ${{ inputs.ROLE_DURATION_SECONDS }}
          ROLE_SESSION_NAME: "${{ inputs.ROLE_SESSION_NAME }}-${{ inputs.ENVIRONMENT_NAME }}"
          TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
          TF_DYNAMO_TABLE: ${{ vars.TF_DYNAMO_TABLE }}
          TF_VERSION: ${{ vars.TF_VERSION }}
          IDENTITY_ROLE: ${{ secrets.IDENTITY_ROLE }}
